// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: txUbxyHZEQtwFYn2S2wJPb
// Component: xk8jVg_PE3
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";
import * as plasmicAuth from "@plasmicapp/react-web/lib/auth";
import { usePlasmicDataSourceContext } from "@plasmicapp/data-sources-context";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic_antd_5_hostless.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic_plasmic_rich_components.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic_app_starter.module.css"; // plasmic-import: txUbxyHZEQtwFYn2S2wJPb/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: xk8jVg_PE3/css
import IconSocialInstagramIcon from "./icons/PlasmicIcon__IconSocialInstagram"; // plasmic-import: nvkwbz3bO/icon
import IconSocialInstagramCopyIcon from "./icons/PlasmicIcon__IconSocialInstagramCopy"; // plasmic-import: HfMl9CBSmV/icon
import IconSocialInstagramCopy2Icon from "./icons/PlasmicIcon__IconSocialInstagramCopy2"; // plasmic-import: VQjw1BFhHn/icon
import IconSocialInstagramCopy3Icon from "./icons/PlasmicIcon__IconSocialInstagramCopy3"; // plasmic-import: 3nEFLw0W3F/icon
import IconSocialInstagramCopy4Icon from "./icons/PlasmicIcon__IconSocialInstagramCopy4"; // plasmic-import: gmcc7ClbKv/icon
import OvalIcon from "./icons/PlasmicIcon__Oval"; // plasmic-import: ZBPpw_Ezje/icon
import PathIcon from "./icons/PlasmicIcon__Path"; // plasmic-import: hu_aQOcNlM/icon
import Path2Icon from "./icons/PlasmicIcon__Path2"; // plasmic-import: WJv-4_FXed/icon
import Path3Icon from "./icons/PlasmicIcon__Path3"; // plasmic-import: 4wEF_-_uo2/icon
import Path4Icon from "./icons/PlasmicIcon__Path4"; // plasmic-import: exSXVG-hC6/icon
import Path5Icon from "./icons/PlasmicIcon__Path5"; // plasmic-import: cQgn5UmZz5/icon
import Path6Icon from "./icons/PlasmicIcon__Path6"; // plasmic-import: 21Burylywu/icon
import Oval2Icon from "./icons/PlasmicIcon__Oval2"; // plasmic-import: 8x8sd2pAoX/icon
import Path7Icon from "./icons/PlasmicIcon__Path7"; // plasmic-import: o3gZzpb13f/icon
import Oval3Icon from "./icons/PlasmicIcon__Oval3"; // plasmic-import: iWxNz4HDhn/icon
import Path8Icon from "./icons/PlasmicIcon__Path8"; // plasmic-import: d5Xigli00Dr/icon
import Path9Icon from "./icons/PlasmicIcon__Path9"; // plasmic-import: SyAOEduEjuG/icon
import Oval4Icon from "./icons/PlasmicIcon__Oval4"; // plasmic-import: 2KfugnnlH_Q/icon
import Path10Icon from "./icons/PlasmicIcon__Path10"; // plasmic-import: C73rrU9xQrB/icon
import Path11Icon from "./icons/PlasmicIcon__Path11"; // plasmic-import: vjswU7vgsXL/icon
import Path12Icon from "./icons/PlasmicIcon__Path12"; // plasmic-import: VW2GrqCH6JZ/icon
import Path13Icon from "./icons/PlasmicIcon__Path13"; // plasmic-import: tWNKKgDp969/icon
import Path14Icon from "./icons/PlasmicIcon__Path14"; // plasmic-import: zFy48Q-6upe/icon
import Oval5Icon from "./icons/PlasmicIcon__Oval5"; // plasmic-import: HyYvCIVuCdh/icon
import Oval6Icon from "./icons/PlasmicIcon__Oval6"; // plasmic-import: PKJyjCnp66T/icon
import Path15Icon from "./icons/PlasmicIcon__Path15"; // plasmic-import: EkquiWTOjCA/icon
import Oval7Icon from "./icons/PlasmicIcon__Oval7"; // plasmic-import: yT7pm-Nn6bn/icon
import Path16Icon from "./icons/PlasmicIcon__Path16"; // plasmic-import: 4lwh-dGozdO/icon
import Path17Icon from "./icons/PlasmicIcon__Path17"; // plasmic-import: EEReszy3qU3/icon
import Path18Icon from "./icons/PlasmicIcon__Path18"; // plasmic-import: kxzPVJTf1Gv/icon
import Path19Icon from "./icons/PlasmicIcon__Path19"; // plasmic-import: rXIX1XjlboB/icon
import Path20Icon from "./icons/PlasmicIcon__Path20"; // plasmic-import: ENfcRDfWhFT/icon
import Oval8Icon from "./icons/PlasmicIcon__Oval8"; // plasmic-import: jbds7xlRHWA/icon
import ShapeIcon from "./icons/PlasmicIcon__Shape"; // plasmic-import: lahXWw3BS32/icon
import undrawHappyNewsHxmtBMYb92Gz3G from "./images/undrawHappyNewsHxmt.svg"; // plasmic-import: bMYb92GZ3G/picture

createPlasmicElementProxy;

export const PlasmicHomepage__VariantProps = new Array();

export const PlasmicHomepage__ArgProps = new Array();

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());

const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function PlasmicHomepage__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const currentUser = p.useCurrentUser?.() || {};
  const [$queries, setDollarQueries] = React.useState({});
  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            plasmic_plasmic_rich_components_css.plasmic_tokens,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"_1LandingPage"}
            data-plasmic-override={overrides._1LandingPage}
            className={classNames(projectcss.all, sty._1LandingPage)}
          >
            <div
              data-plasmic-name={"hero"}
              data-plasmic-override={overrides.hero}
              className={classNames(projectcss.all, sty.hero)}
            >
              <div
                data-plasmic-name={"mask"}
                data-plasmic-override={overrides.mask}
                className={classNames(projectcss.all, sty.mask)}
              />

              <div
                data-plasmic-name={"heroContent"}
                data-plasmic-override={overrides.heroContent}
                className={classNames(projectcss.all, sty.heroContent)}
              >
                <div
                  data-plasmic-name={
                    "textBlockHeroTitleBodyActionRow2LineTitle"
                  }
                  data-plasmic-override={
                    overrides.textBlockHeroTitleBodyActionRow2LineTitle
                  }
                  className={classNames(
                    projectcss.all,
                    sty.textBlockHeroTitleBodyActionRow2LineTitle
                  )}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ngshW
                    )}
                  >
                    {"Level the playing field"}
                  </div>
                  <div
                    data-plasmic-name={"frame17"}
                    data-plasmic-override={overrides.frame17}
                    className={classNames(projectcss.all, sty.frame17)}
                  />

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame16"}
                    data-plasmic-override={overrides.frame16}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame16)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__z9C73
                      )}
                    >
                      {"Get Started"}
                    </div>
                  </p.Stack>
                </div>
              </div>
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__yD1Y4
              )}
            >
              {
                "Parity is your one-stop-shop for thousands of digital freelance and full-time jobs."
              }
            </div>
            <div
              data-plasmic-name={
                "wereCommittedToHelpingYouNavigateYourCareerWithParityYouGainAccessToAnExtensiveRepositoryOfGenuineSalaryDataAndAuthenticWorkplaceCultureEvaluationsAllThoughtfullyContributedByRealEmployeesAnonymously"
              }
              data-plasmic-override={
                overrides.wereCommittedToHelpingYouNavigateYourCareerWithParityYouGainAccessToAnExtensiveRepositoryOfGenuineSalaryDataAndAuthenticWorkplaceCultureEvaluationsAllThoughtfullyContributedByRealEmployeesAnonymously
              }
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.wereCommittedToHelpingYouNavigateYourCareerWithParityYouGainAccessToAnExtensiveRepositoryOfGenuineSalaryDataAndAuthenticWorkplaceCultureEvaluationsAllThoughtfullyContributedByRealEmployeesAnonymously
              )}
            >
              {
                "We\u2019re committed to helping you navigate your career. \n\nWith Parity, you gain access to an extensive repository of genuine salary data, and authentic workplace culture evaluations, all thoughtfully contributed by real employees.\n\nAnonymously "
              }
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__phCxu
              )}
            >
              {"Parity"}
            </div>
            <div
              data-plasmic-name={"footer"}
              data-plasmic-override={overrides.footer}
              className={classNames(projectcss.all, sty.footer)}
            >
              <div
                data-plasmic-name={"rectangle"}
                data-plasmic-override={overrides.rectangle}
                className={classNames(projectcss.all, sty.rectangle)}
              />

              <div
                data-plasmic-name={"_"}
                data-plasmic-override={overrides._}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty._
                )}
              >
                {"\u00a92023 Parity"}
              </div>
              <div
                data-plasmic-name={"group"}
                data-plasmic-override={overrides.group}
                className={classNames(projectcss.all, sty.group)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__mReU
                  )}
                >
                  {"Home"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__o7Egs
                  )}
                >
                  {"About"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__dC7Ds
                  )}
                >
                  {"Contact"}
                </div>
              </div>
              <IconSocialInstagramIcon
                className={classNames(projectcss.all, sty.svg___6ExU9)}
                role={"img"}
              />

              <IconSocialInstagramCopyIcon
                className={classNames(projectcss.all, sty.svg__oGZl)}
                role={"img"}
              />

              <IconSocialInstagramCopy2Icon
                className={classNames(projectcss.all, sty.svg__lr7Za)}
                role={"img"}
              />

              <IconSocialInstagramCopy3Icon
                className={classNames(projectcss.all, sty.svg___3DUsY)}
                role={"img"}
              />

              <IconSocialInstagramCopy4Icon
                className={classNames(projectcss.all, sty.svg__zuYzj)}
                role={"img"}
              />

              <div
                data-plasmic-name={"rectangle2"}
                data-plasmic-override={overrides.rectangle2}
                className={classNames(projectcss.all, sty.rectangle2)}
              />
            </div>
            <p.Stack
              as={"div"}
              data-plasmic-name={"frame5"}
              data-plasmic-override={overrides.frame5}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame5)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__c6El
                )}
              >
                {"Employee"}
              </div>
            </p.Stack>
            <p.Stack
              as={"div"}
              data-plasmic-name={"frame15"}
              data-plasmic-override={overrides.frame15}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame15)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__sFpfT
                )}
              >
                {"Organisation"}
              </div>
            </p.Stack>
            <p.PlasmicImg
              data-plasmic-name={"img"}
              data-plasmic-override={overrides.img}
              alt={""}
              className={classNames(sty.img)}
              displayHeight={"315.848px"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"480px"}
              loading={"lazy"}
              src={{
                src: undrawHappyNewsHxmtBMYb92Gz3G,
                fullWidth: 480,
                fullHeight: 315.848,
                aspectRatio: 1.518987
              }}
            />

            <div
              data-plasmic-name={"undrawMention6K5D"}
              data-plasmic-override={overrides.undrawMention6K5D}
              className={classNames(projectcss.all, sty.undrawMention6K5D)}
            >
              <OvalIcon
                className={classNames(projectcss.all, sty.svg__fl6Bo)}
                role={"img"}
              />

              <PathIcon
                className={classNames(projectcss.all, sty.svg__uIgAc)}
                role={"img"}
              />

              <Path2Icon
                className={classNames(projectcss.all, sty.svg__loekU)}
                role={"img"}
              />

              <Path3Icon
                className={classNames(projectcss.all, sty.svg__q46No)}
                role={"img"}
              />

              <Path4Icon
                className={classNames(projectcss.all, sty.svg__yx0C7)}
                role={"img"}
              />

              <Path5Icon
                className={classNames(projectcss.all, sty.svg__v1Pvo)}
                role={"img"}
              />

              <Path6Icon
                className={classNames(projectcss.all, sty.svg__f0K)}
                role={"img"}
              />

              <Oval2Icon
                className={classNames(projectcss.all, sty.svg___1THbh)}
                role={"img"}
              />

              <Path7Icon
                className={classNames(projectcss.all, sty.svg__wV31G)}
                role={"img"}
              />

              <Oval3Icon
                className={classNames(projectcss.all, sty.svg__hBt9K)}
                role={"img"}
              />

              <Path8Icon
                className={classNames(projectcss.all, sty.svg__v4SiI)}
                role={"img"}
              />

              <Path9Icon
                className={classNames(projectcss.all, sty.svg__mXw7G)}
                role={"img"}
              />

              <Oval4Icon
                className={classNames(projectcss.all, sty.svg__ydlE5)}
                role={"img"}
              />

              <Path10Icon
                className={classNames(projectcss.all, sty.svg__lcxV)}
                role={"img"}
              />

              <Path11Icon
                className={classNames(projectcss.all, sty.svg__aPjsi)}
                role={"img"}
              />

              <Path12Icon
                className={classNames(projectcss.all, sty.svg__g5Swr)}
                role={"img"}
              />

              <Path13Icon
                className={classNames(projectcss.all, sty.svg___9FThk)}
                role={"img"}
              />

              <Path14Icon
                className={classNames(projectcss.all, sty.svg___7GCK)}
                role={"img"}
              />

              <Oval5Icon
                className={classNames(projectcss.all, sty.svg__ssdPt)}
                role={"img"}
              />

              <Oval6Icon
                className={classNames(projectcss.all, sty.svg___3LfxG)}
                role={"img"}
              />

              <Path15Icon
                className={classNames(projectcss.all, sty.svg__iqTvb)}
                role={"img"}
              />

              <Oval7Icon
                className={classNames(projectcss.all, sty.svg__alv3W)}
                role={"img"}
              />

              <Path16Icon
                className={classNames(projectcss.all, sty.svg__wkygh)}
                role={"img"}
              />

              <Path17Icon
                className={classNames(projectcss.all, sty.svg__qdeBn)}
                role={"img"}
              />

              <Path18Icon
                className={classNames(projectcss.all, sty.svg__xyClP)}
                role={"img"}
              />

              <Path19Icon
                className={classNames(projectcss.all, sty.svg__hIpEn)}
                role={"img"}
              />

              <Path20Icon
                className={classNames(projectcss.all, sty.svg__b8Md)}
                role={"img"}
              />

              <Oval8Icon
                className={classNames(projectcss.all, sty.svg__x6Olm)}
                role={"img"}
              />

              <div
                data-plasmic-name={"rectangle3"}
                data-plasmic-override={overrides.rectangle3}
                className={classNames(projectcss.all, sty.rectangle3)}
              />

              <ShapeIcon
                className={classNames(projectcss.all, sty.svg__mDZjK)}
                role={"img"}
              />
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "_1LandingPage",
    "hero",
    "mask",
    "heroContent",
    "textBlockHeroTitleBodyActionRow2LineTitle",
    "frame17",
    "frame16",
    "wereCommittedToHelpingYouNavigateYourCareerWithParityYouGainAccessToAnExtensiveRepositoryOfGenuineSalaryDataAndAuthenticWorkplaceCultureEvaluationsAllThoughtfullyContributedByRealEmployeesAnonymously",
    "footer",
    "rectangle",
    "_",
    "group",
    "rectangle2",
    "frame5",
    "frame15",
    "img",
    "undrawMention6K5D",
    "rectangle3"
  ],

  _1LandingPage: [
    "_1LandingPage",
    "hero",
    "mask",
    "heroContent",
    "textBlockHeroTitleBodyActionRow2LineTitle",
    "frame17",
    "frame16",
    "wereCommittedToHelpingYouNavigateYourCareerWithParityYouGainAccessToAnExtensiveRepositoryOfGenuineSalaryDataAndAuthenticWorkplaceCultureEvaluationsAllThoughtfullyContributedByRealEmployeesAnonymously",
    "footer",
    "rectangle",
    "_",
    "group",
    "rectangle2",
    "frame5",
    "frame15",
    "img",
    "undrawMention6K5D",
    "rectangle3"
  ],

  hero: [
    "hero",
    "mask",
    "heroContent",
    "textBlockHeroTitleBodyActionRow2LineTitle",
    "frame17",
    "frame16"
  ],

  mask: ["mask"],
  heroContent: [
    "heroContent",
    "textBlockHeroTitleBodyActionRow2LineTitle",
    "frame17",
    "frame16"
  ],

  textBlockHeroTitleBodyActionRow2LineTitle: [
    "textBlockHeroTitleBodyActionRow2LineTitle",
    "frame17",
    "frame16"
  ],

  frame17: ["frame17"],
  frame16: ["frame16"],
  wereCommittedToHelpingYouNavigateYourCareerWithParityYouGainAccessToAnExtensiveRepositoryOfGenuineSalaryDataAndAuthenticWorkplaceCultureEvaluationsAllThoughtfullyContributedByRealEmployeesAnonymously:
    [
      "wereCommittedToHelpingYouNavigateYourCareerWithParityYouGainAccessToAnExtensiveRepositoryOfGenuineSalaryDataAndAuthenticWorkplaceCultureEvaluationsAllThoughtfullyContributedByRealEmployeesAnonymously"
    ],

  footer: ["footer", "rectangle", "_", "group", "rectangle2"],
  rectangle: ["rectangle"],
  _: ["_"],
  group: ["group"],
  rectangle2: ["rectangle2"],
  frame5: ["frame5"],
  frame15: ["frame15"],
  img: ["img"],
  undrawMention6K5D: ["undrawMention6K5D", "rectangle3"],
  rectangle3: ["rectangle3"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

function withPlasmicPageGuard(WrappedComponent) {
  const PageGuard = props => (
    <p.PlasmicPageGuard
      minRole={null}
      appId={"txUbxyHZEQtwFYn2S2wJPb"}
      authorizeEndpoint={"https://studio.plasmic.app/authorize"}
      canTriggerLogin={true}
    >
      <WrappedComponent {...props} />
    </p.PlasmicPageGuard>
  );

  return PageGuard;
}

function withUsePlasmicAuth(WrappedComponent) {
  const WithUsePlasmicAuthComponent = props => {
    const dataSourceCtx = usePlasmicDataSourceContext() ?? {};
    const { isUserLoading, user, token } = plasmicAuth.usePlasmicAuth({
      appId: "txUbxyHZEQtwFYn2S2wJPb"
    });
    return (
      <p.PlasmicDataSourceContextProvider
        value={{
          ...dataSourceCtx,
          isUserLoading,
          userAuthToken: token,
          user
        }}
      >
        <WrappedComponent {...props} />
      </p.PlasmicDataSourceContextProvider>
    );
  };
  return WithUsePlasmicAuthComponent;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  withUsePlasmicAuth(withPlasmicPageGuard(makeNodeComponent("root"))),
  {
    // Helper components rendering sub-elements
    _1LandingPage: makeNodeComponent("_1LandingPage"),
    hero: makeNodeComponent("hero"),
    mask: makeNodeComponent("mask"),
    heroContent: makeNodeComponent("heroContent"),
    textBlockHeroTitleBodyActionRow2LineTitle: makeNodeComponent(
      "textBlockHeroTitleBodyActionRow2LineTitle"
    ),

    frame17: makeNodeComponent("frame17"),
    frame16: makeNodeComponent("frame16"),
    wereCommittedToHelpingYouNavigateYourCareerWithParityYouGainAccessToAnExtensiveRepositoryOfGenuineSalaryDataAndAuthenticWorkplaceCultureEvaluationsAllThoughtfullyContributedByRealEmployeesAnonymously:
      makeNodeComponent(
        "wereCommittedToHelpingYouNavigateYourCareerWithParityYouGainAccessToAnExtensiveRepositoryOfGenuineSalaryDataAndAuthenticWorkplaceCultureEvaluationsAllThoughtfullyContributedByRealEmployeesAnonymously"
      ),

    footer: makeNodeComponent("footer"),
    rectangle: makeNodeComponent("rectangle"),
    _: makeNodeComponent("_"),
    group: makeNodeComponent("group"),
    rectangle2: makeNodeComponent("rectangle2"),
    frame5: makeNodeComponent("frame5"),
    frame15: makeNodeComponent("frame15"),
    img: makeNodeComponent("img"),
    undrawMention6K5D: makeNodeComponent("undrawMention6K5D"),
    rectangle3: makeNodeComponent("rectangle3"),
    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
